name: Publish Package

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  publish:
    runs-on: ubuntu-latest
    container: fedora:37

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v3

      - name: 🛑 Check Tag
        run: |
          dnf install -y jq
          pkg_version="v$(jq -r .version < package.json)"
          if [[ "${{ github.ref_name }}" != "$pkg_version" ]]; then
              echo "Tag ${{ github.ref_name }} does not match package.json version $pkg_version" >&2
              exit 1
          fi

      - name: 🍃 Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: "https://registry.npmjs.org"

      - name: 🍃 Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: ⏱️ Wait for x86-64 Builds
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          wait-interval: 600
          ref: ${{ github.ref }}
          check-name: "build-fedora37"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Download Build (x86-64)
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build.yml
          name: addon-x86-64
          path: build/Release
          allow_forks: false

      - name: 🛠️ Prepare Prebuilds (x86-64)
        run: pnpm pkg-prebuilds-copy --baseDir build/Release --source venmic-addon.node --name=venmic-addon --strip --napi_version=7

      - name: ⏱️ Wait for armv8 Builds
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          wait-interval: 600
          ref: ${{ github.ref }}
          check-name: "build-fedora37-arm"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Download Build (armv8)
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build.yml
          name: addon-armv8
          path: build/Release
          allow_forks: false

      - name: 🛠️ Prepare Prebuilds (armv8)
        run: pnpm pkg-prebuilds-copy --baseDir build/Release --source venmic-addon.node --name=venmic-addon --strip --napi_version=7

      - name: 🛒 Publish
        run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
