on:
  workflow_dispatch:
    inputs:
      test:
        type: boolean
        description: Skip publishing step
      fix:
        type: boolean
        description: Skip build step
      reuse:
        type: string
        description: Workflow to reuse artifacts from
      no-tag-check:
        type: boolean
        description: Skip tag checking step
  push:
    tags:
      - "*"

name: 🚀 Publish Package

jobs:
  build:
    strategy:
      matrix:
        arch: ["arm64", "amd64"]

    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🤖 Setup Qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: "arm64"

      - name: 🏗️ Build Addon
        if: ${{ github.event.inputs.fix != 'true' }}
        run: |
          docker run -v ${{ github.workspace }}:/work --platform linux/${{ matrix.arch }} ghcr.io/vencord/venmic-builder-${{ matrix.arch }}:latest /build.sh

      - name: ♻️ Reuse Artifact
        if: ${{ github.event.inputs.fix == 'true' }}
        uses: actions/download-artifact@v4
        with:
          name: addon-${{ matrix.arch }}
          path: build/Release
          github-token: ${{ secrets.ACTIONS_TOKEN }}
          run-id: ${{ github.event.inputs.reuse }}

      - name: 📤 Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: addon-${{ matrix.arch }}
          path: build/Release

  publish:
    needs: [build]
    runs-on: ubuntu-latest
    container: fedora:38

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🛑 Check Tag
        if: ${{ github.event.inputs.no-tag-check != 'true' }}
        run: |
          dnf install -y jq
          pkg_version="v$(jq -r .version < package.json)"
          if [[ "${{ github.ref_name }}" != "$pkg_version" ]]; then
              echo "Tag ${{ github.ref_name }} does not match package.json version $pkg_version" >&2
              exit 1
          fi

      - name: 🍃 Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 16
          registry-url: "https://registry.npmjs.org"

      - name: 🍃 Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: 🏗️ Setup Dependencies
        run: pnpm install --ignore-scripts

      - name: 📦 Download Build (amd64)
        uses: actions/download-artifact@v4
        with:
          name: addon-amd64
          path: build/Release

      - name: 🛠️ Prepare Prebuilds (amd64)
        run: pnpm pkg-prebuilds-copy --baseDir build/Release --source venmic-addon.node --name=venmic-addon --strip --napi_version=7 --arch=x64

      - name: 📦 Download Build (arm64)
        uses: actions/download-artifact@v4
        with:
          name: addon-arm64
          path: build/Release

      - name: 🛠️ Prepare Prebuilds (arm64)
        run: pnpm pkg-prebuilds-copy --baseDir build/Release --source venmic-addon.node --name=venmic-addon --strip --napi_version=7 --arch=arm64

      - name: 🛒 Publish
        if: ${{ github.event.inputs.test != 'true' }}
        run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
